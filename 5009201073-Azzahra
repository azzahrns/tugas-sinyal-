#!/bin/python
# -*- coding: utf-8 -*-

import numpy as np
from scipy import signal
import matplotlib.pyplot as plt

# Generate a noisy signal
t = np.linspace(0, 1, 1000, endpoint=False)
signal_noise = np.sin(2 * np.pi * 5 * t) + 0.5 * np.random.randn(1000)

# Design a low-pass Butterworth filter
b, a = signal.butter(4, 0.1, 'low')

# Apply the filter to the noisy signal
filtered_signal = signal.filtfilt(b, a, signal_noise)

# Plot the original and filtered signals
plt.plot(t, signal_noise, 'b-', label='Noisy Signal')
plt.plot(t, filtered_signal, 'r-', linewidth=2, label='Filtered Signal')
plt.legend(loc='best')
plt.grid()
plt.show()

# ID
print("Nama:  Niisa")
print("NRP: 5009201073")

import numpy as np
from scipy.signal import convolve

# Define two 1D arrays (signals)
signal1 = np.array([1, 2, 3])
signal2 = np.array([0.5, 1])

# Perform convolution
conv_result = convolve(signal1, signal2, mode='full')

print("Convolution Result:", conv_result)
